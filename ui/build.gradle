apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'org.sonarqube'
apply from: "$projectDir/config/jacoco-settings.gradle"

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName version
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "listener", "com.squareup.leakcanary.FailTestOnLeakRunListener"
    }

    sourceSets {
        androidTest {
            resources.srcDirs += ['src/test/resources']
        }
    }

    buildTypes {
        dev {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError true
        warningsAsErrors true
        lintConfig file("config/lint.xml")
    }

}


dependencies {

    implementation "androidx.appcompat:appcompat:1.0.2"
    implementation "com.google.android.material:material:1.0.0"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation "androidx.test.espresso:espresso-idling-resource:3.1.1"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.0.0"

    api 'com.hyperwallet.android:core-sdk:1.0.0-beta01'

    androidTestImplementation "androidx.test.ext:junit:1.1.0"
    androidTestImplementation "androidx.test:runner:1.1.1"
    androidTestImplementation "androidx.test:rules:1.1.1"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.1.1"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.1.1"
    androidTestImplementation "androidx.test.espresso:espresso-intents:3.1.1"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:3.11.0"
    androidTestImplementation "com.squareup.leakcanary:leakcanary-android-instrumentation:1.6.3"
    androidTestImplementation "com.squareup.leakcanary:leakcanary-support-fragment:1.6.3"

    testImplementation group: 'org.mockito', name: 'mockito-core', version: "2.23.4"
    testImplementation group: 'pl.pragmatists', name: 'JUnitParams', version: "1.1.1"
    testImplementation "org.robolectric:robolectric:4.1"
    testImplementation "com.squareup.okhttp3:mockwebserver:3.11.0"

}

task javadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

task javadocsJar(type: Jar, dependsOn: javadocs) {
    classifier = 'javadoc'
    from javadocs.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

def aarFile = file("$buildDir/outputs/aar/ui-$version"+".aar")
def aarArtifact = artifacts.add('archives', aarFile) {
    type 'aar'
}

def isReleaseVersion = !version.endsWith('SNAPSHOT')

publishing {

    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = isReleaseVersion ? releasesRepoUrl : snapshotsRepoUrl
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }

    publications {
        hyperwalletUi(MavenPublication) {
            groupId = 'com.hyperwallet.android'
            artifactId = 'ui-sdk'
            version = version

            artifact(sourcesJar)
            artifact(javadocsJar)
            artifact(aarArtifact)

            pom {
                name = 'Hyperwallet Android UI SDK'
                description = 'Hyperwallet UI SDK for Android to integrate with Hyperwallet Platform'
                url = 'https://github.com/hyperwallet/hyperwallet-android-ui-sdk'
                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.implementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'devs'
                        name = 'Hyperwallet Developers'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/hyperwallet/hyperwallet-android-ui-sdk.git'
                    developerConnection = 'scm:git:git://github.com/hyperwallet/hyperwallet-android-ui-sdk.git'
                    url = 'https://github.com/hyperwallet/hyperwallet-android-ui-sdk'
                }
            }
        }
    }
}

tasks.withType(Sign) {
    onlyIf {
        isReleaseVersion && !gradle.taskGraph.hasTask("publishToMavenLocal")
    }
}

signing {
    sign publishing.publications.hyperwalletUi
}

sonarqube {
    properties {
        def libraries = project.android.sdkDirectory.getPath() + "/platforms/android-28/android.jar"
        property "sonar.sources", "src/main/java"
        property "sonar.binaries", "build/intermediates/javac/release/compileReleaseJavaWithJavac/classes/com/hyperwallet/android"
        property "sonar.libraries", libraries
        property "sonar.projectName", "android-ui-sdk"
    }
}